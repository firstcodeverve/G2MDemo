package com.example.tests;

import java.util.regex.Pattern;
import java.util.concurrent.TimeUnit;
import org.junit.*;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.*;
import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.Select;

public class G2MDemoTest {
  private WebDriver driver;
  private String baseUrl;
  private boolean acceptNextAlert = true;
  private StringBuffer verificationErrors = new StringBuffer();

//my init method
  @Before
  public void setUp() throws Exception {
    driver = new FirefoxDriver();
    baseUrl = "https://global.gotowebinar.com/";
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
  }

//test class1
  @Test
  public void testG2MDemo() throws Exception {
    driver.get(baseUrl + "/webinars.tmpl");
    assertEquals("Citrix Secure Sign In", driver.getTitle());
    driver.findElement(By.id("emailAddress")).clear();
    driver.findElement(By.id("emailAddress")).sendKeys("suhas.hasini@gmail.com");
    driver.findElement(By.id("password")).clear();
    driver.findElement(By.id("password")).sendKeys("@May2015");
    driver.findElement(By.id("submit")).click();
    assertEquals("My Webinars", driver.getTitle());
    driver.findElement(By.cssSelector("span")).click();
    assertEquals("Schedule a Webinar", driver.getTitle());
    driver.findElement(By.id("name")).clear();
    driver.findElement(By.id("name")).sendKeys("Mytest");
    driver.findElement(By.id("schedule.submit.button")).click();
    assertEquals("Manage Webinar", driver.getTitle());
    assertEquals("Manage Webinar", driver.getTitle());
    try {
      assertEquals("Mytest", driver.findElement(By.id("trainingName")).getText());
    } catch (Error e) {
      verificationErrors.append(e.toString());
    }
    try {
      assertTrue(isElementPresent(By.cssSelector("p.subtitle")));
    } catch (Error e) {
      verificationErrors.append(e.toString());
    }
    driver.findElement(By.linkText("Log Out")).click();
    assertEquals("Citrix Secure Sign In", driver.getTitle());
  }

//end method
  @After
  public void tearDown() throws Exception {
    driver.quit();
    String verificationErrorString = verificationErrors.toString();
    if (!"".equals(verificationErrorString)) {
      fail(verificationErrorString);
    }
  }

//assert1
  private boolean isElementPresent(By by) {
    try {
      driver.findElement(by);
      return true;
    } catch (NoSuchElementException e) {
      return false;
    }
  }

//assert2
  private boolean isAlertPresent() {
    try {
      driver.switchTo().alert();
      return true;
    } catch (NoAlertPresentException e) {
      return false;
    }
  }

//assert3
  private String closeAlertAndGetItsText() {
    try {
      Alert alert = driver.switchTo().alert();
      String alertText = alert.getText();
      if (acceptNextAlert) {
        alert.accept();
      } else {
        alert.dismiss();
      }
      return alertText;
    } finally {
      acceptNextAlert = true;
    }
  }
}
